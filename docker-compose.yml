---
version: '3'
services:
  flaskcli-clickhouse:
    restart: always
    image: bitnami/clickhouse:23.2.2
    container_name: flaskcli-clickhouse
    env_file: ./docker.env
    volumes:
      - ./persistence/clickhouse:/bitnami/clickhouse
      - ./migrations/olap:/docker-entrypoint-initdb.d
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9005:9005"
      - "9009:9009"

  flaskcli-mysql:
    restart: always
    image: mysql:8.0.32
    container_name: flaskcli-mysql
    env_file: ./docker.env
    volumes:
      - ./persistence/mysql:/var/lib/mysql
    ports:
      - "3306:3306"

  flaskcli-kafka:
    restart: always
    image: bitnami/kafka:3.4.0
    container_name: flaskcli-kafka
    env_file: ./docker.env
    volumes:
      - ./persistence/kafka:/bitnami
    ports:
      - "9092:9092"

  flaskcli-redis:
    restart: always
    image: bitnami/redis:7.0
    container_name: flaskcli-redis
    env_file: ./docker.env
    ports:
      - "6379:6379"

  flaskcli-service:
    restart: always
    # 不依赖镜像直接在docker-compose中构建后运行（可以但不推荐）
    build:
      context: ./
      dockerfile: Dockerfile
#    image: yangjinming/flaskcli:latest
    container_name: flaskcli-service
    env_file: ./docker.env
    volumes:
      - ./logs:/opt/flask/logs
    ports:
      - "5000:5000"
    depends_on:
      - flaskcli-clickhouse
      - flaskcli-mysql
      - flaskcli-kafka
      - flaskcli-redis
    command: "/bin/bash -c 'source ./initDB.sh && gunicorn main:app -c ./run.py'"
